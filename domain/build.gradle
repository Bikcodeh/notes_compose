plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'io.realm.kotlin'
    id 'kotlin-kapt'
}

android {
    namespace 'com.bikcodeh.notes_compose.domain'
    compileSdk ProjectConfig.compileSdk

    defaultConfig {
        minSdk ProjectConfig.minSdk
        targetSdk ProjectConfig.targetSkd

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            buildConfigField "String", "APP_ID", getProps("APP_ID")
            buildConfigField "String", "CLIENT_ID", getProps("CLIENT_ID")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "APP_ID", getProps("APP_ID")
            buildConfigField "String", "CLIENT_ID", getProps("CLIENT_ID")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation(project(":core:util"))
    implementation libs.core.ktx
    //implementation libs.realm.sync
    implementation "io.realm.kotlin:library-sync:1.8.0-SNAPSHOT"
    implementation libs.coroutines.core
}

def getProps(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName].toString()
    } else {
        return ""
    }
}